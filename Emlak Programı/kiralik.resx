<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>