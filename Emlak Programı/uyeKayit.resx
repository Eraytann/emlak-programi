<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnKaydet.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9zHrHwQ3gScdMJW6AAAAAElFTkSuQmCC
</value>
  </data>
</root>